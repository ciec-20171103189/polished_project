{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Game.js"],"names":["Player","require","ScoreFX","Star","Game","cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","scoreFXPrefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","btnNode","gameOverNode","controlHintLabel","keyboardHint","multiline","touchHint","onLoad","groundY","y","height","currentStar","currentStarX","timer","starDuration","enabled","hintText","sys","isMobile","string","starPool","NodePool","scorePool","onStartGame","resetScore","x","active","startMoveAt","v2","spawnNewStar","newStar","size","get","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","init","startTimer","despawnStar","star","put","Math","random","width","randX","randY","jumpHeight","maxX","gainScore","pos","score","toString","fx","spawnScoreFX","play","audioEngine","playEffect","despawnScoreFX","scoreFX","update","dt","gameOver","stopMove","destroy"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const Player = require('Player');\nconst ScoreFX = require('ScoreFX');\nconst Star = require('Star');\n\nvar Game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        scoreFXPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        maxStarDuration: 0,\n        minStarDuration: 0,\n\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        \n        player: {\n            default: null,\n            type: Player\n        },\n\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n \n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n        btnNode: {\n            default: null,\n            type: cc.Node\n        },\n        gameOverNode: {\n            default: null,\n            type: cc.Node\n        },\n        controlHintLabel: {\n            default: null,\n            type: cc.Label\n        },\n        keyboardHint: {\n            default: '',\n            multiline: true\n        },\n        touchHint: {\n            default: '',\n            multiline: true\n        },\n    },\n\n    onLoad: function () {\n  \n        this.groundY = this.ground.y + this.ground.height/2;\n\n        this.currentStar = null;\n        this.currentStarX = 0;\n\n        this.timer = 0;\n        this.starDuration = 0;\n\n        this.enabled = false;\n\n        var hintText = cc.sys.isMobile ? this.touchHint : this.keyboardHint;\n        this.controlHintLabel.string = hintText;\n\n        this.starPool = new cc.NodePool('Star');\n        this.scorePool = new cc.NodePool('ScoreFX');\n    },\n\n    onStartGame: function () {\n    \t\n        this.resetScore();\n        this.enabled = true;\n        this.btnNode.x = 3000;\n        this.gameOverNode.active = false;\n        this.player.startMoveAt(cc.v2(0, this.groundY));\n\n        this.spawnNewStar();\n    },\n\n    spawnNewStar: function() {\n        var newStar = null;\n\n        if (this.starPool.size() > 0) {\n            newStar = this.starPool.get(this); // this will be passed to Star's reuse method\n        } else {\n            newStar = cc.instantiate(this.starPrefab);\n        }\n\n        this.node.addChild(newStar);\n   \n        newStar.setPosition(this.getNewStarPosition());\n\n        newStar.getComponent('Star').init(this);\n\n        this.startTimer();\n        this.currentStar = newStar;\n    },\n\n    despawnStar (star) {\n        this.starPool.put(star);\n        this.spawnNewStar();\n    },\n\n    startTimer: function () {\n \n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n\n        if (!this.currentStar) {\n            this.currentStarX = (Math.random() - 0.5) * 2 * this.node.width/2;\n        }\n        var randX = 0;\n \n        var randY = this.groundY + Math.random() * this.player.jumpHeight + 50;\n\n        var maxX = this.node.width/2;\n        if (this.currentStarX >= 0) {\n            randX = -Math.random() * maxX;\n        } else {\n            randX = Math.random() * maxX;\n        }\n        this.currentStarX = randX;\n\n        return cc.v2(randX, randY);\n    },\n\n    gainScore: function (pos) {\n        this.score += 1;\n\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n\n        var fx = this.spawnScoreFX();\n        this.node.addChild(fx.node);\n        fx.node.setPosition(pos);\n        fx.play();\n\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    resetScore: function () {\n        this.score = 0;\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n    },\n\n    spawnScoreFX: function () {\n        var fx;\n        if (this.scorePool.size() > 0) {\n            fx = this.scorePool.get();\n            return fx.getComponent('ScoreFX');\n        } else {\n            fx = cc.instantiate(this.scoreFXPrefab).getComponent('ScoreFX');\n            fx.init(this);\n            return fx;\n        }\n    },\n\n    despawnScoreFX (scoreFX) {\n        this.scorePool.put(scoreFX);\n    },\n\n\n    update: function (dt) {\n\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            this.enabled = false;  \n            return;\n        }\n        this.timer += dt;\n    },\n\n    gameOver: function () {\n        this.gameOverNode.active = true;\n        this.player.enabled = false;\n        this.player.stopMove();\n        this.currentStar.destroy();\n        this.btnNode.x = 0;\n    }\n});\n"]}